/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                }
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | RSE | LWR | SPC |   | ENT | GUI  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                     &mo 2 &mo 1 &kp SPACE   &kp RET &kp LGUI &kp RALT
                        >;
                };

                lower_layer {
// NUMPAD-LAYER-----------------------------------------------------------------------------
// | BSPC |  1  |  2  |  3  |  -  |  /  |   |     |     |     |     |  [  |  ]  |
// | SHFT |  4  |  5  |  6  |  +  |  *  |   |     |     |     |     |     |     |
// | CTRL |  7  |  8  |  9  |  0  |  .  |   |     |     |     |     |     |     |
//                  |  GUI  | mo  | ENT |   | ENT |     | ALT |
                        bindings = <
   &kp BSPC   &kp N1  &kp N2  &kp N3  &kp MINUS &kp FSLH       &trans  &trans &trans &trans &kp LBKT &kp RBKT
   &kp LSHFT  &kp N4  &kp N5  &kp N6  &kp PLUS  &kp ASTRK      &trans  &trans &trans &trans &trans   &trans
   &kp LCTRL  &kp N7  &kp N8  &kp N9  &kp N0    &kp DOT        &trans  &trans &trans &trans &trans   &trans
                              &kp LGUI &trans   &kp RET        &kp RET &trans &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | BSPC|  UP  | RET | DEL |     |   |     |     |     |  (  |  )  | BSPC |
// | SHFT | LFT | DWN  | RGT |Home |PG_UP|   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |      |     | END |PG_DN|   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                     | mo  |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp BSPC &kp UP   &kp RET   &kp DEL  &trans         &trans    &trans    &trans    &kp LPAR &kp RPAR &kp BSPC
   &kp LSHFT &kp LEFT &kp DOWN &kp RIGHT &kp HOME &kp PG_UP      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &trans   &trans   &trans    &kp END  &kp PG_DN      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                               &trans    &trans   &kp SPACE      &kp RET   &trans    &kp RALT
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |  F9  |  F10  |      |
// |      |      |      |      |      |      |   |BT_CLR| BT_0 | BT_1 | BT_2 | BT_3  | BT_4 |
// | CTRL |      |      |      |      |      |   |      |      |      |      |       |      |
//                      |  mo  |  mo  |  SPC |   | ENT  |      | ALT  |
                        bindings = <
   &kp  TAB  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6 &kp F7  &kp F8 &kp F9 &kp F10 &trans
   &trans &trans &trans &trans &trans &trans      &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
   &kp LCTRL &trans &trans &trans   &trans      &trans &trans &trans  &trans  &trans &trans &trans
                           &trans   &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
